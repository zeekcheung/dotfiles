{
  // ================== vim ==================
  "vim.easymotion": true,
  "vim.easymotionMarkerForegroundColorOneChar": "#ff007c",
  "vim.foldfix": true,
  "vim.gdefault": true,
  "vim.showMarksInGutter": true,
  "vim.targets.enable": true,
  "vim.autoSwitchInputMethod.defaultIM": "1033",
  "vim.autoSwitchInputMethod.obtainIMCmd": "D:\\Apps\\im-select\\im-select.exe",
  "vim.autoSwitchInputMethod.switchIMCmd": "D:\\Apps\\im-select\\im-select.exe {im}",
  "vim.handleKeys": {
    "<C-b>": true,
    "<C-d>": true,
    "<C-u>": true,
    "<C-v>": true,
    "<C-a>": false,
    "<C-c>": false,
    "<C-e>": false,
    "<C-s>": false,
    "<C-z>": false,
    "<C-x>": false,
    "<C-f>": true,
    "<C-p>": false
  },
  "vim.highlightedyank.enable": true,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.overrideCopy": false,
  "vim.showcmd": true,
  "vim.showmodename": true,
  "vim.smartRelativeLine": false,
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  // prettier-ignore
  "vim.visualModeKeyBindingsNonRecursive": [
    // indent
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"],
      "silent": true
    },
    // outdent
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"],
      "silent": true
    }
  ],
  // prettier-ignore
  "vim.insertModeKeyBindings": [
    // escape
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  // prettier-ignore
  "vim.normalModeKeyBindings": [
    // undo
    {
      "before": ["u"],
      "commands": ["undo"],
      "silent": true
    },
    // redo
    {
      "before": ["<C-r>"],
      "commands": ["redo"],
      "silent": true
    },
    // quit all
    {
      "before": ["<leader>", "q", "q"],
      "commands": [":qa"]
    },
    // quit window
    {
      "before": ["<leader>", "q", "w"],
      "commands": [":exit"]
    },
    // save and quit
    {
      "before": ["leader", "x"],
      "commands": [":x!"]
    },
    // show hover
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"],
      "silent": true
    },
    // next tab
    {
      "before": ["<Tab>"],
      "commands": [":tabp"]
    },
    // previous tab
    {
      "before": ["<S-Tab>"],
      "commands": [":tabn"]
    },
    // go to left window
    {
      "before": ["<c-h>"],
      "after": ["<c-w>", "h"]
    },
    // go to down window
    {
      "before": ["<c-j>"],
      "after": ["<c-w>", "j"]
    },
    // go to up window
    {
      "before": ["<c-k>"],
      "after": ["<c-w>", "k"]
    },
    // go to right window
    {
      "before": ["<c-l>"],
      "after": ["<c-w>", "l"]
    },
    // go to line start
    {
      "before": ["H"],
      "after": ["^"]
    },
    // go to line end
    {
      "before": ["L"],
      "after": ["$"]
    }
  ],
  // prettier-ignore
  "vim.normalModeKeyBindingsNonRecursive": [
    // toggle explorer
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"],
      "silent": true
    },
    // quickfix/code actions
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"],
      "silent": true
    },
    // rename
    {
      "before": ["leader", "r", "n"],
      "commands": ["editor.action.rename"],
      "silent": true
    },
    // format
    {
      "before": ["<leader>", "f", "m"],
      "commands": ["editor.action.formatDocument"],
      "silent": true
    },
    // find file
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["workbench.action.quickOpen"],
      "silent": true
    },
    // find recent files
    {
      "before": ["<leader>", "f", "o"],
      "commands": ["workbench.action.openRecent"],
      "silent": true
    },
    // find notifications
    {
      "before": ["<leader>", "f", "n"],
      "commands": ["notifications.showList"],
      "silent": true
    },
    // find keymaps
    {
      "before": ["<leader>", "f", "k"],
      "commands": ["workbench.action.openGlobalKeybindings"],
      "silent": true
    },
    // Go to Symbol in Editor
    {
      "before": ["<leader>", "f", "s"],
      "commands": ["workbench.action.gotoSymbol"],
      "silent": true
    },
    // Go to Symbol in Workspace
    {
      "before": ["<leader>", "f", "S"],
      "commands": ["workbench.action.showAllSymbols"],
      "silent": true
    },
    // find word
    {
      "before": ["<leader>", "f", "w"],
      "commands": ["actions.find"],
      "silent": true
    },
    // find word(workbench)
    {
      "before": ["<leader>", "f", "W"],
      "commands": ["workbench.action.findInFiles"],
      "silent": true
    },
    // find themes
    {
      "before": ["<leader>", "u", "c"],
      "commands": ["workbench.action.selectTheme"],
      "silent": true
    },
    // toggle diagnostics
    {
      "before": ["<leader>", "u", "d"],
      "commands": ["workbench.actions.view.problems"],
      "silent": true
    },
    // toggle word wrap
    {
      "before": ["<leader>", "u", "w"],
      "commands": ["editor.action.toggleWordWrap"],
      "silent": true
    },
    // easymotion
    {
      "before": ["s"],
      "after": ["leader", "leader", "s"]
    },
    // toggle symbol
    {
      "before": ["leader", "c", "s"],
      "commands": ["outline.focus", "outline.collapseAll"],
      "silent": true
    },
    // git
    {
      "before": ["<leader>", "g", "g"],
      "commands": ["workbench.scm.focus"],
      "silent": true
    },
    // toggle zen mode
    {
      "before": ["<leader>", "z"],
      "commands": ["workbench.action.toggleZenMode"],
      "silent": true
    }
  ]
}
